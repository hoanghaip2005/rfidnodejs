<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Include shared styles -->
    <%- include('../partials/styles') %>

        <style>
            .header {
                background: linear-gradient(135deg, #0397b1, #265293);
                color: white;
                padding: 20px 0;
                text-align: center;
                font-size: 24px;
                font-weight: bold;
                margin-bottom: 30px;
            }

            body {
                min-height: 100vh;
                font-size: 12px;
                background: #f8f9fa;
            }

            .available-container {
                margin: 20px auto;
                max-width: 900px;
            }

            .status-available {
                background-color: #d4edda;
                color: #155724;
                border-radius: 15px;
                font-weight: bold;
                padding: 8px 12px;
                display: inline-block;
            }

            .status-unavailable {
                background-color: #524d4d;
                color: #a19e9e;
                border-radius: 15px;
                padding: 8px 12px;
                display: inline-block;
            }

            /* Mobile responsive status - stack icon above text and center */
            @media (max-width: 768px) {

                .status-available,
                .status-unavailable {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    text-align: center;
                    min-width: 80px;
                    padding: 10px 8px;
                }

                .status-available i,
                .status-unavailable i {
                    margin: 0 0 4px 0 !important;
                    font-size: 16px;
                }

                /* Hide Last Update column on mobile */
                .table th:last-child,
                .table td:last-child {
                    display: none;
                }
            }

            .table th {
                background-color: #0397b1;
                color: white;
                border: none;
            }

            .loading {
                text-align: center;
                padding: 50px;
                color: #6c757d;
            }

            .back-btn {
                background: #6c757d;
                color: white;
                border: none;
                padding: 12px 30px;
                border-radius: 25px;
                font-size: 16px;
                cursor: pointer;
                transition: all 0.3s ease;
            }

            .back-btn:hover {
                background: #495057;
                transform: translateY(-2px);
            }

            /* Sortable table headers */
            .sortable {
                cursor: pointer;
                user-select: none;
                position: relative;
                transition: all 0.2s ease;
            }

            .sortable:hover {
                background-color: #037a8f !important;
            }

            .sortable i {
                margin-left: 8px;
                opacity: 0.7;
                font-size: 12px;
            }

            .sortable.active i {
                opacity: 1;
            }

            .text-info {
                font-weight: bold;
                color: #136efb;
            }

            .main-content {
                min-height: 100vh;
                padding-top: 0;
            }
        </style>
</head>

<body>
    <!-- Mobile Menu Toggle -->
    <button class="btn btn-light position-fixed" id="mobileMenuToggle"
        style="top: 1rem; left: 1rem; z-index: 1100; display: none;">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Include shared sidebar -->
    <%- include('../partials/sidebar') %>

        <!-- Main Content -->
        <div class="main-content">
            <header class="header">
                <div class="container d-flex justify-content-between align-items-center">
                    <div class="flex-grow-1 text-center">
                        <i class="fas fa-users me-2"></i>Available Status
                    </div>
                </div>
            </header>

            <div class="container">
                <div class="available-container">
                    <div id="loadingMessage" class="loading">
                        <i class="fas fa-spinner fa-spin me-2"></i>Đang tải danh sách nhân viên...
                    </div>

                    <div id="availableTable" style="display: none;">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th class="sortable" onclick="sortTable('department')" id="departmentHeader">
                                            Depart <i class="fas fa-sort"></i>
                                        </th>
                                        <th class="sortable" onclick="sortTable('status')" id="statusHeader">
                                            At Work <i class="fas fa-sort"></i>
                                        </th>
                                        <th class="sortable" onclick="sortTable('location')" id="locationHeader">
                                            Location <i class="fas fa-sort"></i>
                                        </th>
                                        <th>Last Update</th>
                                    </tr>
                                </thead>
                                <tbody id="employeeTableBody">
                                    <!-- Data will be loaded here -->
                                </tbody>
                            </table>
                        </div>

                        <div class="text-center mt-4">
                            <a href="/staff" class="back-btn" style="text-decoration: none; display: inline-block;">
                                <i class="fas fa-arrow-left me-2"></i>Quay Về Staff
                            </a>
                        </div>
                    </div>

                    <div id="errorMessage" class="alert alert-danger" style="display: none;">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <span id="errorText">Có lỗi xảy ra khi tải dữ liệu</span>
                    </div>
                </div>
            </div>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                // Global variables for sorting
                let employeesData = [];
                let currentSort = { column: null, direction: 'asc' };

                // Initialize page
                document.addEventListener('DOMContentLoaded', function () {
                    console.log('Available page loaded');
                    loadEmployeeData();
                });

                async function loadEmployeeData() {
                    const loadingDiv = document.getElementById('loadingMessage');
                    const tableDiv = document.getElementById('availableTable');
                    const tableBody = document.getElementById('employeeTableBody');
                    const errorDiv = document.getElementById('errorMessage');

                    try {
                        console.log('Fetching employee data...');
                        const response = await fetch('/api/availability-status');

                        if (!response.ok) {
                            throw new Error(`HTTP ${response.status}`);
                        }

                        const data = await response.json();
                        console.log('Employee data received:', data);

                        // Hide loading
                        if (loadingDiv) loadingDiv.style.display = 'none';

                        if (data.success && data.employees && data.employees.length > 0) {
                            // Store employee data globally for sorting
                            employeesData = data.employees;

                            // Render the table
                            renderTable();

                            if (tableDiv) tableDiv.style.display = 'block';

                        } else {
                            // No employees found
                            if (tableBody) {
                                tableBody.innerHTML = `
                            <tr>
                                <td colspan="5" class="text-center text-muted">
                                    <i class="fas fa-info-circle me-2"></i>Không có dữ liệu nhân viên
                                </td>
                            </tr>
                        `;
                            }
                            if (tableDiv) tableDiv.style.display = 'block';
                        }

                    } catch (error) {
                        console.error('Error loading employee data:', error);

                        // Hide loading
                        if (loadingDiv) loadingDiv.style.display = 'none';

                        // Show error
                        if (errorDiv) {
                            document.getElementById('errorText').textContent =
                                'Không thể tải dữ liệu: ' + error.message;
                            errorDiv.style.display = 'block';
                        }
                    }
                }

                function renderTable() {
                    const tableBody = document.getElementById('employeeTableBody');
                    if (!tableBody || !employeesData.length) return;

                    let html = '';
                    employeesData.forEach(emp => {
                        const status = emp.isAvailable ?
                            '<span class="status-available"><i class="fas fa-check-circle me-1"></i>Available</span>' :
                            '<span class="status-unavailable"><i class="fas fa-times-circle me-1"></i>Unavailable</span>';

                        const location = emp.isAvailable && emp.currentLocation ?
                            `<i class="fas fa-map-marker-alt me-1 text-primary"></i>${emp.currentLocation}` :
                            '<span class="text-muted">N/A</span>';

                        const department = emp.department && emp.department !== 'N/A' ?
                            `<span class="text-info">${emp.department}</span>` :
                            '<span class="text-muted">N/A</span>';

                        html += `
                    <tr>
                        <td>
                            <strong>${emp.name}</strong>
                            <br><small class="text-muted">ID: ${emp.id || emp.cardId}</small>
                        </td>
                        <td>${department}</td>
                        <td>${status}</td>
                        <td>${location}</td>
                        <td>
                            <small class="text-muted">
                                <i class="fas fa-clock me-1"></i>${emp.lastUpdate || 'Chưa có dữ liệu'}
                            </small>
                        </td>
                    </tr>
                `;
                    });

                    tableBody.innerHTML = html;
                }

                function sortTable(column) {
                    if (!employeesData.length) return;

                    // Determine sort direction
                    if (currentSort.column === column) {
                        currentSort.direction = currentSort.direction === 'asc' ? 'desc' : 'asc';
                    } else {
                        currentSort.column = column;
                        currentSort.direction = 'asc';
                    }

                    // Sort the data
                    employeesData.sort((a, b) => {
                        let aValue, bValue;

                        if (column === 'department') {
                            aValue = (a.department && a.department !== 'N/A' ? a.department : 'N/A').toLowerCase();
                            bValue = (b.department && b.department !== 'N/A' ? b.department : 'N/A').toLowerCase();
                        } else if (column === 'location') {
                            aValue = (a.currentLocation || 'N/A').toLowerCase();
                            bValue = (b.currentLocation || 'N/A').toLowerCase();
                        } else if (column === 'status') {
                            // Sort by availability status: Available first (true), then Unavailable (false)
                            aValue = a.isAvailable ? 1 : 0;
                            bValue = b.isAvailable ? 1 : 0;
                        }

                        if (column === 'status') {
                            // For status, use numeric comparison
                            if (currentSort.direction === 'asc') {
                                return bValue - aValue; // Available first (descending by default for better UX)
                            } else {
                                return aValue - bValue; // Unavailable first
                            }
                        } else {
                            // For text columns, use string comparison
                            if (currentSort.direction === 'asc') {
                                return aValue.localeCompare(bValue);
                            } else {
                                return bValue.localeCompare(aValue);
                            }
                        }
                    });

                    // Update header icons
                    updateSortIcons(column, currentSort.direction);

                    // Re-render table
                    renderTable();
                }

                function updateSortIcons(activeColumn, direction) {
                    // Reset all sort icons
                    document.querySelectorAll('.sortable').forEach(header => {
                        const icon = header.querySelector('i');
                        if (icon) {
                            icon.className = 'fas fa-sort';
                            header.classList.remove('active');
                        }
                    });

                    // Set active column icon
                    const activeHeader = document.getElementById(activeColumn + 'Header');
                    if (activeHeader) {
                        const icon = activeHeader.querySelector('i');
                        if (icon) {
                            icon.className = direction === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down';
                            activeHeader.classList.add('active');
                        }
                    }
                }

                function goBackToStaff() {
                    console.log('goBackToStaff called');
                    window.location.href = '/staff';
                }

                // Logout function
                async function logout() {
                    if (confirm('Bạn có chắc chắn muốn đăng xuất?')) {
                        try {
                            const response = await fetch('/auth/logout', { method: 'POST' });
                            const data = await response.json();
                            if (data.success) {
                                window.location.href = data.redirectUrl || '/auth/login';
                            }
                        } catch (error) {
                            console.error('Logout error:', error);
                            alert('Đã xảy ra lỗi khi đăng xuất');
                        }
                    }
                }

                // Auto refresh every 30 seconds
                setInterval(loadEmployeeData, 30000);
            </script>

            <!-- Include shared scripts -->
            <%- include('../partials/scripts') %>
        </div>
</body>

</html>