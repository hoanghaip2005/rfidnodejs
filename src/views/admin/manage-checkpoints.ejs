<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý Checkpoints - Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Include shared styles -->
    <%- include('../partials/styles') %>

        <style>
            body {
                background: linear-gradient(45deg, #f8f9fa, #e9ecef);
                min-height: 100vh;
            }

            .header {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                padding: 20px 0;
                margin-bottom: 30px;
            }

            .card {
                border: none;
                border-radius: 15px;
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
                margin-bottom: 20px;
            }

            .card-header {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                border-radius: 15px 15px 0 0 !important;
                padding: 15px 20px;
            }

            .checkpoint-item {
                background: white;
                padding: 15px;
                margin-bottom: 10px;
                border-radius: 10px;
                border: 2px solid #e9ecef;
                display: flex;
                justify-content: space-between;
                align-items: center;
                transition: all 0.3s;
            }

            .checkpoint-item:hover {
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                transform: translateY(-2px);
            }

            .checkpoint-badge {
                padding: 5px 15px;
                border-radius: 20px;
                font-weight: bold;
                font-size: 12px;
            }

            .checkpoint-badge.in {
                background: #d4edda;
                color: #155724;
            }

            .checkpoint-badge.out {
                background: #f8d7da;
                color: #721c24;
            }

            .btn-add {
                background: linear-gradient(135deg, #28a745, #20c997);
                color: white;
                border: none;
            }

            .btn-add:hover {
                background: linear-gradient(135deg, #20c997, #17a2b8);
                color: white;
            }

            .empty-state {
                text-align: center;
                padding: 60px 20px;
                color: #6c757d;
            }

            .empty-state i {
                font-size: 80px;
                margin-bottom: 20px;
                opacity: 0.3;
            }

            .main-content {
                min-height: 100vh;
                padding-top: 0;
            }
        </style>
</head>

<body>
    <!-- Mobile Menu Toggle -->
    <button class="btn btn-light position-fixed" id="mobileMenuToggle"
        style="top: 1rem; left: 1rem; z-index: 1100; display: none;">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Include shared sidebar -->
    <%- include('../partials/sidebar') %>

        <!-- Main Content -->
        <div class="main-content">
            <header class="header">
                <div class="container">
                    <h1><i class="fas fa-map-marked-alt me-2"></i>Quản lý Checkpoints</h1>
                    <p class="mb-0">Cấu hình điểm check-in/out cho từng sự kiện</p>
                </div>
            </header>

            <div class="container">
                <div class="row">
                    <!-- Event Selection -->
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0"><i class="fas fa-calendar-alt me-2"></i>Chọn Sự Kiện</h5>
                            </div>
                            <div class="card-body">
                                <select id="eventSelect" class="form-select mb-3">
                                    <option value="">-- Chọn sự kiện --</option>
                                </select>
                                <button class="btn btn-add w-100" onclick="showAddCheckpointModal()">
                                    <i class="fas fa-plus me-2"></i>Thêm Checkpoint Mới
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Checkpoints List -->
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0"><i class="fas fa-list me-2"></i>Danh sách Checkpoints</h5>
                            </div>
                            <div class="card-body" id="checkpointsList">
                                <div class="empty-state">
                                    <i class="fas fa-map-marker-alt"></i>
                                    <h5>Chọn sự kiện để xem checkpoints</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mt-3">
                    <button class="btn btn-secondary" onclick="goBack()">
                        <i class="fas fa-arrow-left me-2"></i>Quay lại
                    </button>
                </div>
            </div>

            <!-- Add Checkpoint Modal -->
            <div class="modal fade" id="addCheckpointModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title"><i class="fas fa-plus me-2"></i>Thêm Checkpoint Mới</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <label class="form-label">Tên Checkpoint:</label>
                                <input type="text" id="checkpointName" class="form-control" placeholder="VD: GATE_IN">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Loại:</label>
                                <select id="checkpointType" class="form-select">
                                    <option value="IN">IN - Check In</option>
                                    <option value="OUT">OUT - Check Out</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Thứ tự hiển thị:</label>
                                <input type="number" id="checkpointOrder" class="form-control" value="1" min="1">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                            <button type="button" class="btn btn-primary" onclick="addCheckpoint()">Thêm</button>
                        </div>
                    </div>
                </div>
            </div>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                let currentEvent = '';
                let addCheckpointModal;

                document.addEventListener('DOMContentLoaded', function () {
                    loadEvents();
                    addCheckpointModal = new bootstrap.Modal(document.getElementById('addCheckpointModal'));

                    document.getElementById('eventSelect').addEventListener('change', function () {
                        currentEvent = this.value;
                        if (currentEvent) {
                            loadCheckpoints(currentEvent);
                        } else {
                            showEmptyState();
                        }
                    });
                });

                function loadEvents() {
                    fetch('/api/event-manager/events', {
                        credentials: 'include'
                    })
                        .then(response => response.json())
                        .then(data => {
                            const select = document.getElementById('eventSelect');
                            select.innerHTML = '<option value="">-- Chọn sự kiện --</option>';

                            if (data.success && data.events) {
                                data.events.forEach(event => {
                                    const option = document.createElement('option');
                                    option.value = event.name;
                                    option.textContent = event.name;
                                    select.appendChild(option);
                                });
                            }
                        })
                        .catch(error => console.error('Error loading events:', error));
                }

                function loadCheckpoints(eventName) {
                    fetch('/api/event-manager/list-checkpoints', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ event_name: eventName }),
                        credentials: 'include'
                    })
                        .then(response => response.json())
                        .then(data => {
                            const container = document.getElementById('checkpointsList');

                            if (data.success && data.columns && data.columns.length > 0) {
                                container.innerHTML = '';
                                data.columns.forEach((checkpoint, index) => {
                                    const div = document.createElement('div');
                                    div.className = 'checkpoint-item';
                                    div.innerHTML = `
                                <div>
                                    <span class="fw-bold">${index + 1}. ${checkpoint.name}</span>
                                    <span class="checkpoint-badge ${checkpoint.type.toLowerCase()}">${checkpoint.type}</span>
                                </div>
                                <div>
                                    <button class="btn btn-sm btn-danger" onclick="removeCheckpoint('${checkpoint.name}')">
                                        <i class="fas fa-trash"></i> Xóa
                                    </button>
                                </div>
                            `;
                                    container.appendChild(div);
                                });
                            } else {
                                container.innerHTML = `
                            <div class="empty-state">
                                <i class="fas fa-inbox"></i>
                                <h5>Chưa có checkpoint nào</h5>
                                <p>Nhấn "Thêm Checkpoint Mới" để bắt đầu</p>
                            </div>
                        `;
                            }
                        })
                        .catch(error => {
                            console.error('Error loading checkpoints:', error);
                            showError('Lỗi khi tải danh sách checkpoints');
                        });
                }

                function showEmptyState() {
                    document.getElementById('checkpointsList').innerHTML = `
                <div class="empty-state">
                    <i class="fas fa-map-marker-alt"></i>
                    <h5>Chọn sự kiện để xem checkpoints</h5>
                </div>
            `;
                }

                function showAddCheckpointModal() {
                    if (!currentEvent) {
                        alert('Vui lòng chọn sự kiện trước');
                        return;
                    }
                    document.getElementById('checkpointName').value = '';
                    document.getElementById('checkpointType').value = 'IN';
                    document.getElementById('checkpointOrder').value = '1';
                    addCheckpointModal.show();
                }

                function addCheckpoint() {
                    const name = document.getElementById('checkpointName').value.trim().toUpperCase();
                    const type = document.getElementById('checkpointType').value;
                    const order = document.getElementById('checkpointOrder').value;

                    if (!name) {
                        alert('Vui lòng nhập tên checkpoint');
                        return;
                    }

                    // Validate checkpoint name format
                    if (!/^[A-Z_]+$/.test(name)) {
                        alert('Tên checkpoint chỉ được chứa chữ in hoa và dấu gạch dưới');
                        return;
                    }

                    fetch('/api/event-manager/add-checkpoint', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            event_name: currentEvent,
                            checkpoint_name: name,
                            checkpoint_type: type,
                            display_order: parseInt(order)
                        }),
                        credentials: 'include'
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                addCheckpointModal.hide();
                                loadCheckpoints(currentEvent);
                                showSuccess(data.message);
                            } else {
                                showError(data.message || 'Lỗi khi thêm checkpoint');
                            }
                        })
                        .catch(error => {
                            console.error('Error adding checkpoint:', error);
                            showError('Lỗi kết nối');
                        });
                }

                function removeCheckpoint(checkpointName) {
                    if (!confirm(`Bạn có chắc muốn xóa checkpoint "${checkpointName}"?`)) {
                        return;
                    }

                    fetch('/api/event-manager/remove-checkpoint', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            event_name: currentEvent,
                            checkpoint_name: checkpointName
                        }),
                        credentials: 'include'
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                loadCheckpoints(currentEvent);
                                showSuccess(data.message);
                            } else {
                                showError(data.message || 'Lỗi khi xóa checkpoint');
                            }
                        })
                        .catch(error => {
                            console.error('Error removing checkpoint:', error);
                            showError('Lỗi kết nối');
                        });
                }

                function showSuccess(message) {
                    alert('✅ ' + message);
                }

                function showError(message) {
                    alert('❌ ' + message);
                }

                function goBack() {
                    window.location.href = '/admin/dashboard';
                }
            </script>

            <!-- Include shared scripts -->
            <%- include('../partials/scripts') %>
        </div>
</body>

</html>