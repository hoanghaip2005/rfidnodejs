<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cài đặt Hệ thống - RFID Attendance System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Include shared styles -->
    <%- include('../partials/styles') %>

        <style>
            /* Page-specific styles for admin settings */
            .settings-card {
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                transition: transform 0.2s;
                margin-bottom: 20px;
            }

            .settings-card:hover {
                transform: translateY(-2px);
            }

            .settings-icon {
                width: 50px;
                height: 50px;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 1.5rem;
                color: white;
                margin-right: 15px;
            }

            .system-status {
                padding: 15px;
                border-radius: 8px;
                margin-bottom: 15px;
            }

            .status-online {
                background: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
            }

            .status-warning {
                background: #fff3cd;
                color: #856404;
                border: 1px solid #ffeaa7;
            }

            .status-error {
                background: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
            }

            .config-section {
                background: #f8f9fa;
                padding: 20px;
                border-radius: 10px;
                margin-bottom: 20px;
            }

            .switch {
                position: relative;
                display: inline-block;
                width: 60px;
                height: 34px;
            }

            .switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

            .slider {
                position: absolute;
                cursor: pointer;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background-color: #ccc;
                transition: .4s;
                border-radius: 34px;
            }

            .slider:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white;
                transition: .4s;
                border-radius: 50%;
            }

            input:checked+.slider {
                background-color: #007bff;
            }

            input:checked+.slider:before {
                transform: translateX(26px);
            }
        </style>
</head>

<body>
    <!-- Mobile Menu Toggle -->
    <button class="btn btn-light position-fixed d-lg-none" id="mobileMenuToggle"
        style="top: 1rem; left: 1rem; z-index: 1100;">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Include shared sidebar -->
    <%- include('../partials/sidebar') %>

        <!-- Main Content -->
        <div class="main-content">
            <div class="container-fluid">
                <a class="navbar-brand" href="/admin">
                    <i class="fas fa-id-card me-2"></i>RFID Admin
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="/admin">
                                <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/users">
                                <i class="fas fa-users me-1"></i>Người dùng
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/events">
                                <i class="fas fa-calendar me-1"></i>Sự kiện
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/reports">
                                <i class="fas fa-chart-bar me-1"></i>Báo cáo
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="/admin/settings">
                                <i class="fas fa-cog me-1"></i>Cài đặt
                            </a>
                        </li>
                    </ul>
                    <ul class="navbar-nav">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                                <i class="fas fa-user me-1"></i>
                                <%= user.name %>
                            </a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/staff">Giao diện Nhân viên</a></li>
                                <li>
                                    <hr class="dropdown-divider">
                                </li>
                                <li><a class="dropdown-item" href="/logout">Đăng xuất</a></li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
            </nav>

            <div class="container-fluid py-4">
                <!-- System Status -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="card settings-card">
                            <div class="card-header bg-white">
                                <h5 class="mb-0">
                                    <i class="fas fa-heartbeat text-success me-2"></i>Trạng thái Hệ thống
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="system-status status-online" id="serverStatus">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-server fa-2x me-3"></i>
                                                <div>
                                                    <h6 class="mb-0">Máy chủ</h6>
                                                    <small>Đang hoạt động</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="system-status" id="databaseStatus">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-database fa-2x me-3"></i>
                                                <div>
                                                    <h6 class="mb-0">Cơ sở dữ liệu</h6>
                                                    <small id="dbStatusText">Đang kiểm tra...</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="system-status" id="rfidStatus">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-wifi fa-2x me-3"></i>
                                                <div>
                                                    <h6 class="mb-0">RFID Reader</h6>
                                                    <small id="rfidStatusText">Đang kiểm tra...</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="system-status" id="socketStatus">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-broadcast-tower fa-2x me-3"></i>
                                                <div>
                                                    <h6 class="mb-0">Socket.IO</h6>
                                                    <small id="socketStatusText">Đang kiểm tra...</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- General Settings -->
                    <div class="col-md-6">
                        <div class="card settings-card">
                            <div class="card-header bg-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-cogs text-primary me-2"></i>Cài đặt Chung
                                </h6>
                            </div>
                            <div class="card-body">
                                <form id="generalSettingsForm">
                                    <div class="mb-3">
                                        <label class="form-label">Tên hệ thống</label>
                                        <input type="text" class="form-control" name="systemName"
                                            value="RFID Attendance System">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Múi giờ</label>
                                        <select class="form-select" name="timezone">
                                            <option value="Asia/Ho_Chi_Minh" selected>Việt Nam (UTC+7)</option>
                                            <option value="Asia/Bangkok">Bangkok (UTC+7)</option>
                                            <option value="Asia/Singapore">Singapore (UTC+8)</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Ngôn ngữ</label>
                                        <select class="form-select" name="language">
                                            <option value="vi" selected>Tiếng Việt</option>
                                            <option value="en">English</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <label class="form-label mb-1">Chế độ bảo trì</label>
                                                <small class="text-muted d-block">Tạm thời tắt hệ thống cho người
                                                    dùng</small>
                                            </div>
                                            <label class="switch">
                                                <input type="checkbox" name="maintenanceMode">
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save me-1"></i>Lưu cài đặt
                                    </button>
                                </form>
                            </div>
                        </div>

                        <!-- Attendance Settings -->
                        <div class="card settings-card">
                            <div class="card-header bg-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-clock text-info me-2"></i>Cài đặt Chấm công
                                </h6>
                            </div>
                            <div class="card-body">
                                <form id="attendanceSettingsForm">
                                    <div class="mb-3">
                                        <label class="form-label">Giờ bắt đầu làm việc</label>
                                        <input type="time" class="form-control" name="workStartTime" value="08:00">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Giờ kết thúc làm việc</label>
                                        <input type="time" class="form-control" name="workEndTime" value="17:00">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Thời gian cho phép đi muộn (phút)</label>
                                        <input type="number" class="form-control" name="lateThreshold" value="30"
                                            min="0" max="120">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Thời gian chống spam (giây)</label>
                                        <input type="number" class="form-control" name="antiSpamDelay" value="5" min="1"
                                            max="60">
                                    </div>
                                    <div class="mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <label class="form-label mb-1">Cho phép chấm công cuối tuần</label>
                                                <small class="text-muted d-block">Thứ 7 và Chủ nhật</small>
                                            </div>
                                            <label class="switch">
                                                <input type="checkbox" name="allowWeekendWork" checked>
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-info">
                                        <i class="fas fa-save me-1"></i>Lưu cài đặt
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- Security & Network Settings -->
                    <div class="col-md-6">
                        <div class="card settings-card">
                            <div class="card-header bg-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-shield-alt text-warning me-2"></i>Bảo mật & Mạng
                                </h6>
                            </div>
                            <div class="card-body">
                                <form id="securitySettingsForm">
                                    <div class="mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <label class="form-label mb-1">Kiểm tra mạng công ty</label>
                                                <small class="text-muted d-block">Chỉ cho phép truy cập từ mạng công
                                                    ty</small>
                                            </div>
                                            <label class="switch">
                                                <input type="checkbox" name="networkRestriction" checked>
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Mạng WiFi được phép</label>
                                        <input type="text" class="form-control" name="allowedNetworks"
                                            placeholder="VD: CompanyWiFi, Office_5G">
                                        <small class="text-muted">Cách nhau bằng dấu phẩy</small>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">IP Gateway công ty</label>
                                        <input type="text" class="form-control" name="companyGateway"
                                            placeholder="VD: 192.168.1.1">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Giới hạn request/phút</label>
                                        <input type="number" class="form-control" name="rateLimit" value="60" min="10"
                                            max="1000">
                                    </div>
                                    <div class="mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <label class="form-label mb-1">Log hoạt động chi tiết</label>
                                                <small class="text-muted d-block">Ghi lại tất cả hoạt động của người
                                                    dùng</small>
                                            </div>
                                            <label class="switch">
                                                <input type="checkbox" name="detailedLogging" checked>
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-warning">
                                        <i class="fas fa-save me-1"></i>Lưu cài đặt
                                    </button>
                                </form>
                            </div>
                        </div>

                        <!-- RFID Settings -->
                        <div class="card settings-card">
                            <div class="card-header bg-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-wifi text-success me-2"></i>Cài đặt RFID
                                </h6>
                            </div>
                            <div class="card-body">
                                <form id="rfidSettingsForm">
                                    <div class="mb-3">
                                        <label class="form-label">Cổng COM</label>
                                        <select class="form-select" name="comPort" id="comPortSelect">
                                            <option value="COM3" selected>COM3</option>
                                            <!-- Other ports will be loaded dynamically -->
                                        </select>
                                        <small class="text-muted">
                                            <button type="button" class="btn btn-link btn-sm p-0"
                                                onclick="refreshComPorts()">
                                                <i class="fas fa-sync me-1"></i>Làm mới danh sách
                                            </button>
                                        </small>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Baud Rate</label>
                                        <select class="form-select" name="baudRate">
                                            <option value="9600" selected>9600</option>
                                            <option value="19200">19200</option>
                                            <option value="38400">38400</option>
                                            <option value="57600">57600</option>
                                            <option value="115200">115200</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <label class="form-label mb-1">Tự động kết nối lại</label>
                                                <small class="text-muted d-block">Kết nối lại khi mất kết nối</small>
                                            </div>
                                            <label class="switch">
                                                <input type="checkbox" name="autoReconnect" checked>
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <label class="form-label mb-1">Chế độ thử nghiệm</label>
                                                <small class="text-muted d-block">Chấp nhận thẻ giả lập</small>
                                            </div>
                                            <label class="switch">
                                                <input type="checkbox" name="testMode">
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="d-grid gap-2">
                                        <button type="submit" class="btn btn-success">
                                            <i class="fas fa-save me-1"></i>Lưu cài đặt
                                        </button>
                                        <button type="button" class="btn btn-outline-success"
                                            onclick="testRFIDConnection()">
                                            <i class="fas fa-plug me-1"></i>Kiểm tra kết nối
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- System Information -->
                <div class="row mt-4">
                    <div class="col-md-12">
                        <div class="card settings-card">
                            <div class="card-header bg-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-info-circle text-secondary me-2"></i>Thông tin Hệ thống
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <strong>Phiên bản:</strong><br>
                                        <span id="systemVersion">1.0.0</span>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Node.js:</strong><br>
                                        <span id="nodeVersion">-</span>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Uptime:</strong><br>
                                        <span id="systemUptime">-</span>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Người dùng online:</strong><br>
                                        <span id="onlineUsers">-</span>
                                    </div>
                                </div>
                                <hr>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-outline-primary btn-sm" onclick="restartSystem()">
                                        <i class="fas fa-redo me-1"></i>Khởi động lại hệ thống
                                    </button>
                                    <button class="btn btn-outline-info btn-sm" onclick="backupDatabase()">
                                        <i class="fas fa-download me-1"></i>Sao lưu dữ liệu
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm" onclick="clearLogs()">
                                        <i class="fas fa-trash me-1"></i>Xóa logs
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Confirmation Modal -->
            <div class="modal fade" id="confirmModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Xác nhận</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <p id="confirmMessage">Bạn có chắc chắn muốn thực hiện hành động này?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                            <button type="button" class="btn btn-primary" id="confirmAction">Xác nhận</button>
                        </div>
                    </div>
                </div>
            </div>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
            <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
            <script>
                // Global variables
                let socket;
                let systemInfo = {};

                // Initialize page
                document.addEventListener('DOMContentLoaded', function () {
                    initializeSocketIO();
                    loadSystemStatus();
                    loadSettings();
                    setupEventListeners();
                    loadSystemInfo();
                });

                // Socket.IO setup
                function initializeSocketIO() {
                    socket = io();

                    socket.on('connect', function () {
                        console.log('Connected to server');
                        socket.emit('join_room', 'admin');
                        updateSocketStatus('online');
                    });

                    socket.on('disconnect', function () {
                        updateSocketStatus('offline');
                    });

                    socket.on('system_status', function (data) {
                        updateSystemStatus(data);
                    });
                }

                // Setup event listeners
                function setupEventListeners() {
                    // Form submissions
                    document.getElementById('generalSettingsForm').addEventListener('submit', saveGeneralSettings);
                    document.getElementById('attendanceSettingsForm').addEventListener('submit', saveAttendanceSettings);
                    document.getElementById('securitySettingsForm').addEventListener('submit', saveSecuritySettings);
                    document.getElementById('rfidSettingsForm').addEventListener('submit', saveRFIDSettings);
                }

                // Load system status
                async function loadSystemStatus() {
                    try {
                        const response = await fetch('/admin/api/system/status');
                        const data = await response.json();

                        if (data.success) {
                            updateSystemStatus(data.data);
                        }
                    } catch (error) {
                        console.error('Load system status error:', error);
                    }
                }

                // Update system status
                function updateSystemStatus(status) {
                    // Database status
                    const dbStatus = document.getElementById('databaseStatus');
                    const dbStatusText = document.getElementById('dbStatusText');

                    if (status.database && status.database.connected) {
                        dbStatus.className = 'system-status status-online';
                        dbStatusText.textContent = `Kết nối (${status.database.type || 'Unknown'})`;
                    } else {
                        dbStatus.className = 'system-status status-error';
                        dbStatusText.textContent = 'Mất kết nối';
                    }

                    // RFID status
                    const rfidStatus = document.getElementById('rfidStatus');
                    const rfidStatusText = document.getElementById('rfidStatusText');

                    if (status.rfid && status.rfid.connected) {
                        rfidStatus.className = 'system-status status-online';
                        rfidStatusText.textContent = `Kết nối (${status.rfid.port || 'Unknown'})`;
                    } else {
                        rfidStatus.className = 'system-status status-error';
                        rfidStatusText.textContent = 'Mất kết nối';
                    }

                    // Update online users if available
                    if (status.onlineUsers !== undefined) {
                        document.getElementById('onlineUsers').textContent = status.onlineUsers;
                    }
                }

                // Update socket status
                function updateSocketStatus(status) {
                    const socketStatus = document.getElementById('socketStatus');
                    const socketStatusText = document.getElementById('socketStatusText');

                    if (status === 'online') {
                        socketStatus.className = 'system-status status-online';
                        socketStatusText.textContent = 'Kết nối';
                    } else {
                        socketStatus.className = 'system-status status-error';
                        socketStatusText.textContent = 'Mất kết nối';
                    }
                }

                // Load settings
                async function loadSettings() {
                    try {
                        const response = await fetch('/admin/api/settings');
                        const data = await response.json();

                        if (data.success) {
                            populateSettings(data.data);
                        }
                    } catch (error) {
                        console.error('Load settings error:', error);
                    }
                }

                // Populate settings forms
                function populateSettings(settings) {
                    // General settings
                    if (settings.general) {
                        const form = document.getElementById('generalSettingsForm');
                        Object.keys(settings.general).forEach(key => {
                            const element = form.querySelector(`[name="${key}"]`);
                            if (element) {
                                if (element.type === 'checkbox') {
                                    element.checked = settings.general[key];
                                } else {
                                    element.value = settings.general[key];
                                }
                            }
                        });
                    }

                    // Similar for other setting categories...
                }

                // Save settings functions
                async function saveGeneralSettings(e) {
                    e.preventDefault();
                    await saveSettings('general', new FormData(e.target));
                }

                async function saveAttendanceSettings(e) {
                    e.preventDefault();
                    await saveSettings('attendance', new FormData(e.target));
                }

                async function saveSecuritySettings(e) {
                    e.preventDefault();
                    await saveSettings('security', new FormData(e.target));
                }

                async function saveRFIDSettings(e) {
                    e.preventDefault();
                    await saveSettings('rfid', new FormData(e.target));
                }

                // Generic save settings function
                async function saveSettings(category, formData) {
                    try {
                        const settings = {};
                        for (let [key, value] of formData.entries()) {
                            if (value === 'on') {
                                settings[key] = true;
                            } else {
                                settings[key] = value;
                            }
                        }

                        const response = await fetch(`/admin/api/settings/${category}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(settings)
                        });

                        const data = await response.json();

                        if (data.success) {
                            showNotification(`Đã lưu cài đặt ${category}`, 'success');
                        } else {
                            showNotification(data.message || 'Không thể lưu cài đặt', 'error');
                        }
                    } catch (error) {
                        console.error('Save settings error:', error);
                        showNotification('Lỗi kết nối khi lưu cài đặt', 'error');
                    }
                }

                // Load system information
                async function loadSystemInfo() {
                    try {
                        const response = await fetch('/admin/api/system/info');
                        const data = await response.json();

                        if (data.success) {
                            systemInfo = data.data;
                            document.getElementById('systemVersion').textContent = systemInfo.version || '1.0.0';
                            document.getElementById('nodeVersion').textContent = systemInfo.nodeVersion || '-';
                            document.getElementById('systemUptime').textContent = formatUptime(systemInfo.uptime || 0);
                        }
                    } catch (error) {
                        console.error('Load system info error:', error);
                    }
                }

                // Refresh COM ports
                async function refreshComPorts() {
                    try {
                        const response = await fetch('/admin/api/system/com-ports');
                        const data = await response.json();

                        if (data.success) {
                            const select = document.getElementById('comPortSelect');
                            const currentValue = select.value;

                            select.innerHTML = '';
                            data.data.ports.forEach(port => {
                                const option = document.createElement('option');
                                option.value = port.path;
                                option.textContent = `${port.path} (${port.manufacturer || 'Unknown'})`;
                                select.appendChild(option);
                            });

                            // Restore previous selection if still available
                            if (currentValue && data.data.ports.find(p => p.path === currentValue)) {
                                select.value = currentValue;
                            }

                            showNotification('Đã làm mới danh sách cổng COM', 'success');
                        } else {
                            showNotification('Không thể tải danh sách cổng COM', 'error');
                        }
                    } catch (error) {
                        console.error('Refresh COM ports error:', error);
                        showNotification('Lỗi kết nối khi tải cổng COM', 'error');
                    }
                }

                // Test RFID connection
                async function testRFIDConnection() {
                    try {
                        const response = await fetch('/admin/api/system/test-rfid', {
                            method: 'POST'
                        });
                        const data = await response.json();

                        if (data.success) {
                            showNotification('Kết nối RFID thành công', 'success');
                        } else {
                            showNotification(data.message || 'Không thể kết nối RFID', 'error');
                        }
                    } catch (error) {
                        console.error('Test RFID error:', error);
                        showNotification('Lỗi kết nối khi kiểm tra RFID', 'error');
                    }
                }

                // System actions
                function restartSystem() {
                    showConfirmation(
                        'Bạn có chắc chắn muốn khởi động lại hệ thống? Tất cả người dùng sẽ bị ngắt kết nối.',
                        async () => {
                            try {
                                const response = await fetch('/admin/api/system/restart', { method: 'POST' });
                                const data = await response.json();

                                if (data.success) {
                                    showNotification('Hệ thống đang khởi động lại...', 'info');
                                    setTimeout(() => location.reload(), 5000);
                                } else {
                                    showNotification('Không thể khởi động lại hệ thống', 'error');
                                }
                            } catch (error) {
                                showNotification('Lỗi kết nối khi khởi động lại', 'error');
                            }
                        }
                    );
                }

                function backupDatabase() {
                    showConfirmation(
                        'Bạn có muốn tạo bản sao lưu dữ liệu không?',
                        async () => {
                            try {
                                const response = await fetch('/admin/api/system/backup', { method: 'POST' });
                                const data = await response.json();

                                if (data.success) {
                                    showNotification('Đã tạo bản sao lưu thành công', 'success');
                                    // Download backup file if provided
                                    if (data.data.downloadUrl) {
                                        window.open(data.data.downloadUrl, '_blank');
                                    }
                                } else {
                                    showNotification('Không thể tạo bản sao lưu', 'error');
                                }
                            } catch (error) {
                                showNotification('Lỗi kết nối khi tạo sao lưu', 'error');
                            }
                        }
                    );
                }

                function clearLogs() {
                    showConfirmation(
                        'Bạn có chắc chắn muốn xóa tất cả logs? Hành động này không thể hoàn tác.',
                        async () => {
                            try {
                                const response = await fetch('/admin/api/system/clear-logs', { method: 'POST' });
                                const data = await response.json();

                                if (data.success) {
                                    showNotification('Đã xóa logs thành công', 'success');
                                } else {
                                    showNotification('Không thể xóa logs', 'error');
                                }
                            } catch (error) {
                                showNotification('Lỗi kết nối khi xóa logs', 'error');
                            }
                        }
                    );
                }

                // Helper functions
                function showConfirmation(message, onConfirm) {
                    document.getElementById('confirmMessage').textContent = message;

                    const confirmButton = document.getElementById('confirmAction');
                    confirmButton.onclick = function () {
                        onConfirm();
                        bootstrap.Modal.getInstance(document.getElementById('confirmModal')).hide();
                    };

                    new bootstrap.Modal(document.getElementById('confirmModal')).show();
                }

                function formatUptime(seconds) {
                    const days = Math.floor(seconds / 86400);
                    const hours = Math.floor((seconds % 86400) / 3600);
                    const minutes = Math.floor((seconds % 3600) / 60);

                    if (days > 0) {
                        return `${days}d ${hours}h ${minutes}m`;
                    } else if (hours > 0) {
                        return `${hours}h ${minutes}m`;
                    } else {
                        return `${minutes}m`;
                    }
                }

                function showNotification(message, type = 'info') {
                    const alertClass = type === 'error' ? 'danger' : type;
                    const icon = type === 'success' ? 'check' : type === 'error' ? 'exclamation-triangle' : 'info-circle';

                    const notification = document.createElement('div');
                    notification.className = `alert alert-${alertClass} alert-dismissible fade show position-fixed`;
                    notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
                    notification.innerHTML = `
                <i class="fas fa-${icon} me-2"></i>${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;

                    document.body.appendChild(notification);
                    setTimeout(() => notification.remove(), 5000);
                }

                // Auto-refresh system status every 30 seconds
                setInterval(loadSystemStatus, 30000);
            </script>

            <!-- Include shared scripts -->
            <%- include('../partials/scripts') %>
</body>

</html>